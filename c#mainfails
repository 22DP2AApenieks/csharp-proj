using System;

// Klase, kas pārstāv zemes gabalu
class LandPlot
{
    // Privātie lauki
    private double area; // Platība
    private double initialCostPerSquareMeter; // Sākotnējā cena par kvadrātmetru
    private double forestValuePerSquareMeter; // Meža vērtība par kvadrātmetru
    private int numberOfHomes; // Māju skaits
    private double homeValue; // Mājas vērtība

    // Konstruktors, lai inicializētu klases laukus
    public LandPlot(double area, double initialCostPerSquareMeter, double forestValuePerSquareMeter)
    //šis var piekļūt privātajiem mainigajiem - iekapsulēšana
    {
        this.area = area; // Piešķir platības vērtību Dēvēts arī par konstroktoru
        this.initialCostPerSquareMeter = initialCostPerSquareMeter; // Piešķir sākotnējo cenu par kvadrātmetru
        this.forestValuePerSquareMeter = forestValuePerSquareMeter; // Piešķir meža vērtību par kvadrātmetru
    }

    // Metode, lai aprēķinātu zemes gabala kopējo vērtību
    public double CalculateTotalValue(double reductionRate)
    {
        double totalValue = area * initialCostPerSquareMeter; // Sākotnējā zemes vērtība

        // Samazina vērtību, pamatojoties uz attālumu no pilsētas robežas
        double reduction = area * reductionRate;
        totalValue -= reduction;

        // Palielina vērtību, ja uz zemes gabala ir mežs
        if (forestValuePerSquareMeter > 0)
        {
            totalValue += forestValuePerSquareMeter * area;
        }

        // Palielina vērtību, ja uz zemes gabala ir mājas
        totalValue += homeValue;

        return totalValue;
    }

    // Metode, lai pievienotu mājas un to vērtību zemes gabalam
    public void AddHome(double homeValue)
    {
        this.numberOfHomes++; // Palielina māju skaitu
        this.homeValue += homeValue; // Pievieno mājas vērtību
    }

    // Metode, lai pievienotu mežu zemes gabalam
    public void AddForest(double forestArea)
    {
        double forestValue = forestArea * forestValuePerSquareMeter;
        this.forestValuePerSquareMeter += 0.10; // Palielina meža vērtību par 0.10$ par kvadrātmetru
    }
}

// Klase, kas demonstrē LandPlot klases izmantošanu
class MainClass
{
    static void Main()//Static-metode,kura neizmanto fildus no klases
    {
        Console.WriteLine("Laipni lūgti Zemes gabalu novērtēšanas programmā!");

        // Lietotājam jāievada zemes platība
        Console.Write("Ievadiet zemes gabala platību kvadrātmetros: ");
        double area = Convert.ToDouble(Console.ReadLine());

        // Lietotājam jāievada attālums no tuvākās pilsētas
        Console.Write("Ievadiet attālumu no tuvākās pilsētas robežas kilometros: ");
        double distanceFromCityBorder = Convert.ToDouble(Console.ReadLine());

        // Aprēķina samazinājuma likmi, pamatojoties uz attālumu no pilsētas robežas
        double reductionRate = Math.Min(distanceFromCityBorder * 0.01, 3); //Math.min ir lai varētu parādīt pašu lielāko vērtību ar ko var samazināt(3)
        // Samazinājuma likmes aprēķins, pamatojoties uz attālumu no pilsētas robežas.
        // Izmantojot `Math.Min`, izvēlamies mazāko vērtību starp attālumu no pilsētas robežas * 0.01
        // ", 1" Tas nodrošina, ka samazinājuma likme nekad nepārsniedz 3 (60%).

        // Lietotājam jānorāda, vai uz zemes gabala ir mežs
        Console.Write("Vai uz šī zemes gabala ir mežs? (ja/ne): ");
        string forestResponse = Console.ReadLine();
        bool hasForest = forestResponse.ToLower() == "ja";// pēc šī izpildas 99 linija, kas norada ka fprestvaluepersq ir vainu jā(0.10) vai nē(0) un pectam izpildas 32 linija

        // Lietotājam jānorāda, vai uz zemes gabala ir mājas
        Console.Write("Vai uz šī zemes gabala ir mājas? (ja/ne): ");
        string homeResponse = Console.ReadLine();
        bool hasHomes = homeResponse.ToLower() == "ja";

        double homeValue = 0;
        if (hasHomes)
        {
            // Lietotājam jānorāda māju skaits
            Console.Write("Cik mājas ir uz šī zemes gabala?: ");
            int numberOfHomes = Convert.ToInt32(Console.ReadLine());
            homeValue = numberOfHomes * 50000;
        }

        // Izveido zemes gabalu
        LandPlot landPlot = new LandPlot(area, initialCostPerSquareMeter: 5.0, forestValuePerSquareMeter: hasForest ? 0.10 : 0.0); //hasForest = bool kas piešķirs vertibu forvalpersq

        // Pievieno mājas
        landPlot.AddHome(homeValue);

        // Izdrukā zemes gabala kopējo vērtību
        Console.WriteLine($"Kopējā zemes gabala vērtība: ${landPlot.CalculateTotalValue(reductionRate)}");
    }
}
